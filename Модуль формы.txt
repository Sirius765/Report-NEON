//Перем мСкладыПеремещения;
Перем мСкладыДвижений;
Перем мЦеныПоставки;

//Все Цены необходимы ТОЛЬКО с учетом НДС, акцизов, прочего
Процедура ПриОткрытии()
	//ВыбФирма=глПользователь.ОсновнаяФирма;//Если вы хотите изменить фирму-вам сюда
КонецПроцедуры

Функция ИндексКолонки(пМассив,пИмяКолонки)
	Рез = 1;
	Найден = Ложь;
	Для Каждого стр Из пМассив Цикл
		Если стр = пИмяКолонки Тогда
			Найден = Истина;
			Прервать;
		КонецЕсли;
		Рез=Рез+1;
	КонецЦикла;
	Если Найден Тогда
		Возврат Рез;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Процедура ЗаполнитьЗаголовкиКолонок(пЛист,пРяд,пМассив)
	Инд=1;
	Для Каждого эл Из пМассив Цикл
		//пЛист.Cells(пРяд,ИндексКолонки(пМассив,эл)).FormulaR1C1=эл;  		
		пЛист.Cells(пРяд,Инд).FormulaR1C1=эл;  		
		Инд=Инд+1;
	КонецЦикла;
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	Перем Excel, ExcelWB,ВыбКонПериода,ВыбНачПериода,ИмяВыбФирмы,ИмяФайла,ПутьФ,КодФирмы;
	
	мСкладыДвижений = Новый Массив;
	
	КодФирмы="000000005";//Здесь хранится код компании отчеты по которой предоставляются
	ПутьФ=КаталогЭкспорта+"\"; //Сюда кидается отчет
	ВыбНачПериода = НачалоДня(НачДата);
	ВыбКонПериода = КонецДня(КонДата);
	//------------------------------------------------------------
	ИмяФайла=ПутьФ+Строка(СтрЗаменить(Справочники.Организации.НайтиПоКоду(КодФирмы).Наименование,"""",""))+" "+Лев(ВыбНачПериода,2)+прав(Лев(ВыбНачПериода,5),2)+прав(Лев(ВыбНачПериода,10),4)+"-"+Лев(ВыбКонПериода,2)+прав(Лев(ВыбКонПериода,5),2)+прав(Лев(ВыбКонПериода,10),4)+".xls";
	Сообщить("Начало выгрузки НЕОН в файл """ + ИмяФайла + """");
  	//Формируем имя файла
    ФайлОтч=Новый Файл(ПутьФ); 
    Если ФайлОтч.Существует()=0 Тогда
    	СоздатьКаталог(ПутьФ); //Проверка на существование директории
	КонецЕсли;	
	Excel = Новый COMОбъект("Excel.Application");
	Excel.ScreenUpdating = 0; //Отключение автообновления экрана ускоряет выгрузку в Excel

	ExcelWB = Excel.Workbooks.Add();
	//Экселевский файл создан
		Excel.Calculation = -4135; //Отключение автоматического пересчета ячеек ускоряет выгрузку в Excel
	//Создаем шапку лист1
		Лист		= ExcelWB.Sheets(1);
		Лист.Name	= "главная";
		Лист.Columns("A").NumberFormat = "0";          //Формат колонки - Число целое
		Лист.Columns("B").NumberFormat = "@";          //Текстовый формат колонки
		Лист.Columns("C").NumberFormat = "ДД.ММ.ГГГГ"; //Формат колонки - Дата
		Лист.Columns("D").NumberFormat = "ДД.ММ.ГГГГ"; //Формат колонки - Дата
		Лист.Columns("E").NumberFormat = "0";          //Формат колонки - Число целое
		Лист.Columns("F").NumberFormat = "@";          //Текстовый формат колонки
		Лист.Columns("G").NumberFormat = "@";          //Текстовый формат колонки 
	//Создаем шапку лист 2
		Лист = ExcelWB.Sheets(2);
		Лист.Name	="товар - движение по складу";
		Лист.Columns("A").NumberFormat = "0";          
		Лист.Columns("B").NumberFormat = "@";          
		Лист.Columns("C").NumberFormat = "ДД.ММ.ГГГГ"; 
		Лист.Columns("D").NumberFormat = "ДД.ММ.ГГГГ"; 
		Лист.Columns("E").NumberFormat = "0"; 
		Лист.Columns("F").NumberFormat = "0"; 
		Лист.Columns("G").NumberFormat = "@";   
		Лист.Columns("H").NumberFormat = "@";   
		Лист.Columns("I").NumberFormat = "0";   
		Лист.Columns("J").NumberFormat = "0";   
		Лист.Columns("K").NumberFormat = "@";   
		Лист.Columns("L").NumberFormat = "0";   
		Лист.Columns("M").NumberFormat = "@";   
		Лист.Columns("N").NumberFormat = "@";   
		Лист.Columns("O").NumberFormat = "@";   
		Лист.Columns("P").NumberFormat = "@";   
		Лист.Columns("Q").NumberFormat = "0";   
		Лист.Columns("R").NumberFormat = "0";   
		Лист.Columns("S").NumberFormat = "@";	
		Лист.Columns("T").NumberFormat = "0";
		Лист.Columns("U").NumberFormat = "0,00";	//"# ##0,00";   
		Лист.Columns("V").NumberFormat = "0,00";
		Лист.Columns("W").NumberFormat = "@";
		Лист.Columns("X").NumberFormat = "0";
		Лист.Columns("Y").NumberFormat = "@";
		Лист.Columns("Z").NumberFormat = "ДД.ММ.ГГГГ";
		Лист.Columns("AA").NumberFormat = "@";
		
	//Красивости 
		Лист.Columns("A").ColumnWidth = 4.14;
		Лист.Columns("B").ColumnWidth = 9.14;
		Лист.Columns("C").ColumnWidth = 9.71;
		Лист.Columns("D").ColumnWidth = 10.14;
		Лист.Columns("E").ColumnWidth = 13;
		Лист.Columns("F").ColumnWidth = 14.14;
		Лист.Columns("G").ColumnWidth = 14.29;
		Лист.Columns("H").ColumnWidth = 21.71;
		Лист.Columns("I").ColumnWidth = 8.29;
		Лист.Columns("J").ColumnWidth = 11.14;
		Лист.Columns("K").ColumnWidth = 6.86;
		Лист.Columns("L").ColumnWidth = 44.71;
		Лист.Columns("M").ColumnWidth = 10;
		Лист.Columns("N").ColumnWidth = 10;
		Лист.Columns("O").ColumnWidth = 10;
		Лист.Columns("P").ColumnWidth = 4.57;
		Лист.Columns("Q").ColumnWidth = 36.86;
		Лист.Columns("R").ColumnWidth = 7;
		Лист.Columns("S").ColumnWidth = 12.43;
		Лист.Rows("1").RowHeight=39.75;
		Лист.Rows("1").WrapText=1;
		Лист.Rows("1").Font.Size=10;
		Лист.Rows("1").Font.Bold=1;
	//Создаем Шапку Лист 3
		Лист = ExcelWB.Sheets(3);
		Лист.Name	="товар - остатки товара";
	    Лист.Columns("A").NumberFormat = "0";          
		Лист.Columns("B").NumberFormat = "0";          
		Лист.Columns("C").NumberFormat = "@"; 
		Лист.Columns("D").NumberFormat = "0"; 
		Лист.Columns("E").NumberFormat = "0";
		Лист.Columns("F").NumberFormat = "0";
		Лист.Columns("G").NumberFormat = "0";
		Лист.Columns("H").NumberFormat = "0";
		Лист.Columns("I").NumberFormat = "ДД.ММ.ГГГГ";
		Лист.Columns("J").NumberFormat = "@";
		
	//Сохраняемся и перезапускаем
		ExcelWB.SaveAs(ИмяФайла, -4143);
		ExcelWB.Close();
	//А теперь-движения
	//Для начала сделаем буферную таблицу значений
		Вывод = Новый ТаблицаЗначений;
		Вывод.Колонки.Добавить("Контрагент");
		Вывод.Колонки.Добавить("НомерДокумента");
		Вывод.Колонки.Добавить("ДатаДокумента");
		Вывод.Колонки.Добавить("КодОперации");
		Вывод.Колонки.Добавить("Номенклатура");
		Вывод.Колонки.Добавить("Количество");
		Вывод.Колонки.Добавить("Цена");
		//++МС
		Вывод.Колонки.Добавить("ЦенаПоступления");
		Вывод.Колонки.Добавить("Штрихкод");
		Вывод.Колонки.Добавить("НомерВходящегоДокумента");
		Вывод.Колонки.Добавить("КППКонтрагента");
		Вывод.Колонки.Добавить("ТП");		// Торговый представитель
		Вывод.Колонки.Добавить("КодТП");    // Код торгового представителя
		//--МС
		Вывод.Колонки.Добавить("Склад");
		Вывод.Колонки.Добавить("КодДок");
		Вывод.Колонки.Добавить("Адрес");
		Вывод.Колонки.Добавить("СкладБ");
	//Теперь непосредственно обработка сведений
	
	//поступление поставщику
	Состояние("Обработка поступлений товара от поставщика...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПоступлениеТоваровУслуг.Номер,
	             |	ПоступлениеТоваровУслуг.Дата,
	             |	ПоступлениеТоваровУслуг.Контрагент,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура,
	             |	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	             |	0 КАК Цена,
	             |	ПоступлениеТоваровУслугТовары.Цена КАК ЦенаПоступления,
	             |	ПоступлениеТоваровУслугТовары.Склад.Код,
	             |	ПоступлениеТоваровУслуг.Контрагент.ЮрФизЛицо.Ссылка,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура.Ссылка,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура1,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.СкладОрдер КАК Склад
	             |ИЗ
	             |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	             |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО ПоступлениеТоваровУслугТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ПоступлениеТоваровУслугТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И ПоступлениеТоваровУслуг.Проведен = ИСТИНА
	            // |	И ПоступлениеТоваровУслуг.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПоступлениеТоваровУслуг.Номер,
	             |	ПоступлениеТоваровУслуг.Дата,
	             |	ПоступлениеТоваровУслуг.Контрагент,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура,
	             |	ПоступлениеТоваровУслугТовары.Цена,
	             |	ПоступлениеТоваровУслугТовары.Склад.Код,
	             |	ПоступлениеТоваровУслуг.Контрагент.ЮрФизЛицо.Ссылка,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура.Ссылка,
	             |	ПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	             |	ПоступлениеТоваровУслуг.СкладОрдер,
	             |	ПоступлениеТоваровУслугТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС
	Результат=Запрос.Выполнить();
	мЦеныПоставки = Результат.Выгрузить();
	мЦеныПоставки.Свернуть("Номенклатура,ЦенаПоступления");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.Склад);	//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент=Выборк.Контрагент;
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=1;//приход товара от поставщика
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.СкладКод);
		стр.Цена=Выборк.Цена;
		//++МС
		стр.ЦенаПоступления=Выборк.ЦенаПоступления;
		стр.Штрихкод=Выборк.Штрихкод;
		стр.НомерВходящегоДокумента=Выборк.НомерВходящегоДокумента; 
		//--МС
		стр.КодДок=Выборк.Номер;
		темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Адрес доставки"));
		если СтрДлина(темп)<=5 тогда
			темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Фактический адрес юр.лица"));
			если СтрДлина(темп)<=5 тогда
				темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Юридический адрес юр.лица"));
				если СтрДлина(темп)<=5 тогда
					темп="Адрес не введен в учетную систему";
				конецесли;
			конецесли;
		конецесли;			
		стр.Адрес=темп
	Конеццикла;
	//-------------------------------------------------------------------------------
	//Возврат поставщику
	Состояние("Обработка возврата товара поставщику...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ВозвратТоваровПоставщику.Номер,
	             |	ВозвратТоваровПоставщику.Дата,
	             |	ВозвратТоваровПоставщику.Контрагент,
	             |	ВозвратТоваровПоставщикуТовары.Номенклатура,
	             |	СУММА(ВозвратТоваровПоставщикуТовары.Количество) КАК Количество,
	             |	0 КАК Цена,
	             |	ВозвратТоваровПоставщикуТовары.Цена КАК ЦенаПоступления,
	             |	ВозвратТоваровПоставщикуТовары.Склад.Код,
	             |	ВозвратТоваровПоставщику.Контрагент.ЮрФизЛицо.Ссылка,
	             |	ВозвратТоваровПоставщикуТовары.Номенклатура.Ссылка,
	             |	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура1,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
	             |	ВозвратТоваровПоставщикуТовары.ДокументПоступления.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	             |	ВозвратТоваровПоставщику.Склад
	             |ИЗ
	             |	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	             |		ПО ВозвратТоваровПоставщикуТовары.Ссылка = ВозвратТоваровПоставщику.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО ВозвратТоваровПоставщикуТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	ВозвратТоваровПоставщику.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ВозвратТоваровПоставщикуТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И ВозвратТоваровПоставщику.Проведен = ИСТИНА
	             //|	И ВозвратТоваровПоставщику.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВозвратТоваровПоставщику.Номер,
	             |	ВозвратТоваровПоставщику.Дата,
	             |	ВозвратТоваровПоставщику.Контрагент,
	             |	ВозвратТоваровПоставщикуТовары.Номенклатура,
	             |	ВозвратТоваровПоставщикуТовары.Цена,
	             |	ВозвратТоваровПоставщикуТовары.Склад.Код,
	             |	ВозвратТоваровПоставщику.Контрагент.ЮрФизЛицо.Ссылка,
	             |	ВозвратТоваровПоставщикуТовары.Номенклатура.Ссылка,
	             |	ВозвратТоваровПоставщикуТовары.ДокументПоступления.НомерВходящегоДокумента,
	             |	ВозвратТоваровПоставщику.Склад,
	             |	ВозвратТоваровПоставщикуТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.Склад);	//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент=Выборк.Контрагент;
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=4;//возврат товара поставщику
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.СкладКод);
		стр.Цена=Выборк.Цена;
		//++МС
		стр.ЦенаПоступления=Выборк.ЦенаПоступления;
		стр.Штрихкод=Выборк.Штрихкод;
		стр.НомерВходящегоДокумента=Выборк.НомерВходящегоДокумента; 
		//--МС
		стр.КодДок=Выборк.Номер;
		темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Адрес доставки"));
		если СтрДлина(темп)<=5 тогда
			темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Фактический адрес юр.лица"));
			если СтрДлина(темп)<=5 тогда
				темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Юридический адрес юр.лица"));
				если СтрДлина(темп)<=5 тогда
					темп="Адрес не введен в учетную систему";
				конецесли;
			конецесли;
		конецесли;			
		стр.Адрес=темп
	Конеццикла;
	
	//---------------------------------------------------------------------
	//продажа покупателям
	Состояние("Обработка продажи товара покупателям...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	РеализацияТоваровУслуг.Дата,
	             |	РеализацияТоваровУслуг.Контрагент,
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	             |	РеализацияТоваровУслугТовары.Склад.Код,
	             |	РеализацияТоваровУслуг.Контрагент.ЮрФизЛицо.Ссылка,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Ссылка,
	             |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура1,
	             |	РеализацияТоваровУслуг.Номер,
	             |	РеализацияТоваровУслугТовары.Сумма,
	             |	РеализацияТоваровУслугТовары.СуммаНДС,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
	             |	РеализацияТоваровУслуг.Контрагент.ОсновнойМенеджерПокупателя.Наименование КАК ОсновнойМенеджер,
	             |	РеализацияТоваровУслуг.Контрагент.ОсновнойМенеджерПокупателя.Код КАК ОсновнойМенеджерКод,
	             |	РеализацияТоваровУслуг.Контрагент.КПП КАК КонтрагентКПП,
	             |	РеализацияТоваровУслуг.Склад
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	             |		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО РеализацияТоваровУслугТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	РеализацияТоваровУслуг.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И РеализацияТоваровУслугТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И РеализацияТоваровУслуг.Проведен = ИСТИНА
	             //|	И РеализацияТоваровУслуг.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровУслуг.Дата,
	             |	РеализацияТоваровУслуг.Контрагент,
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	РеализацияТоваровУслугТовары.Склад.Код,
	             |	РеализацияТоваровУслуг.Контрагент.ЮрФизЛицо.Ссылка,
	             |	РеализацияТоваровУслугТовары.Номенклатура.Ссылка,
	             |	РеализацияТоваровУслуг.Номер,
	             |	РеализацияТоваровУслугТовары.Сумма,
	             |	РеализацияТоваровУслугТовары.СуммаНДС,
	             |	РеализацияТоваровУслуг.Контрагент.ОсновнойМенеджерПокупателя.Наименование,
	             |	РеализацияТоваровУслуг.Контрагент.ОсновнойМенеджерПокупателя.Код,
	             |	РеализацияТоваровУслуг.Контрагент.КПП,
	             |	РеализацияТоваровУслуг.Склад,
	             |	РеализацияТоваровУслугТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.Склад);	//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент=Выборк.Контрагент;
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=0;//продажа товара
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.СкладКод);
		стр.Цена=Окр((Выборк.Сумма)/Выборк.Количество,2);
		//++МС
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.Штрихкод=Выборк.Штрихкод;
		стр.КППКонтрагента=Выборк.КонтрагентКПП;
		стр.ТП=Выборк.ОсновнойМенеджер;
		стр.КодТП=Выборк.ОсновнойМенеджерКод;
		//--МС
		стр.КодДок=Выборк.Номер;
		темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Адрес доставки"));
		если СтрДлина(темп)<=5 тогда
			темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Фактический адрес юр.лица"));
			если СтрДлина(темп)<=5 тогда
				темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Юридический адрес юр.лица"));
				если СтрДлина(темп)<=5 тогда
					темп="Адрес не введен в учетную систему";
				конецесли;
			конецесли;
		конецесли;			
		стр.Адрес=темп
	Конеццикла;
	
	//---------------------------------------------------------------------
	//возврат от покупателя
	Состояние("Обработка возврата товара покупателями...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ВозвратТоваровОтПокупателя.Номер,
	             |	ВозвратТоваровОтПокупателя.Дата,
	             |	ВозвратТоваровОтПокупателя.Контрагент,
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	             |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество,
	             |	ВозвратТоваровОтПокупателяТовары.Сумма,
	             |	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
	             |	ВозвратТоваровОтПокупателяТовары.Склад.Код,
	             |	ВозвратТоваровОтПокупателя.Контрагент.ЮрФизЛицо.Ссылка,
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура.Ссылка,
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура1,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
	             |	ВозвратТоваровОтПокупателя.Контрагент.ОсновнойМенеджерПокупателя.Наименование КАК ОсновнойМенеджер,
	             |	ВозвратТоваровОтПокупателя.Контрагент.ОсновнойМенеджерПокупателя.Код КАК ОсновнойМенеджерКод,
	             |	ВозвратТоваровОтПокупателя.Контрагент.КПП КАК КонтрагентКПП,
	             |	ВозвратТоваровОтПокупателя.СкладОрдер КАК Склад
	             |ИЗ
	             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	             |		ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВозвратТоваровОтПокупателя.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО ВозвратТоваровОтПокупателяТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	ВозвратТоваровОтПокупателя.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ВозвратТоваровОтПокупателяТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И ВозвратТоваровОтПокупателя.Проведен = ИСТИНА
	             //|	И ВозвратТоваровОтПокупателя.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВозвратТоваровОтПокупателя.Номер,
	             |	ВозвратТоваровОтПокупателя.Дата,
	             |	ВозвратТоваровОтПокупателя.Контрагент,
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	             |	ВозвратТоваровОтПокупателяТовары.Сумма,
	             |	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
	             |	ВозвратТоваровОтПокупателяТовары.Склад.Код,
	             |	ВозвратТоваровОтПокупателя.Контрагент.ЮрФизЛицо.Ссылка,
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура.Ссылка,
	             |	ВозвратТоваровОтПокупателя.Контрагент.ОсновнойМенеджерПокупателя.Наименование,
	             |	ВозвратТоваровОтПокупателя.Контрагент.ОсновнойМенеджерПокупателя.Код,
	             |	ВозвратТоваровОтПокупателя.Контрагент.КПП,
	             |	ВозвратТоваровОтПокупателя.СкладОрдер,
	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.Склад);	//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент=Выборк.Контрагент;
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=2;//возврат товара нам
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.СкладКод);
		стр.Цена=Окр((Выборк.Сумма+Выборк.СуммаНДС)/Выборк.Количество,2);
		//++МС
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.Штрихкод=Выборк.Штрихкод;
		стр.КППКонтрагента=Выборк.КонтрагентКПП;
		стр.ТП=Выборк.ОсновнойМенеджер;
		стр.КодТП=Выборк.ОсновнойМенеджерКод;
		//--МС
		стр.КодДок=Выборк.Номер;
		темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Адрес доставки"));
		если СтрДлина(темп)<=5 тогда
			темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Фактический адрес юр.лица"));
			если СтрДлина(темп)<=5 тогда
				темп=строка(ПолучитьАдрес(Выборк.Контрагент,"Юридический адрес юр.лица"));
				если СтрДлина(темп)<=5 тогда
					темп="Адрес не введен в учетную систему";
				конецесли;
			конецесли;
		конецесли;			
		стр.Адрес=темп
	Конеццикла;
	
	//-----------------------------------------------------------------------------------------
	//Списание
	Состояние("Обработка списания товара...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	СписаниеТоваров.Склад,
	             |	СписаниеТоваров.Номер,
	             |	СписаниеТоваров.Дата,
	             |	СписаниеТоваровТовары.Номенклатура,
	             |	СписаниеТоваровТовары.Цена,
	             //|	СписаниеТоваров.Организация,
	             |	СУММА(СписаниеТоваровТовары.Количество) КАК Количество,
	             |	СписаниеТоваровТовары.Номенклатура КАК Номенклатура1,
	             |	СписаниеТоваров.Склад.Код,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	             |ИЗ
	             |	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	             |		ПО СписаниеТоваровТовары.Ссылка = СписаниеТоваров.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО СписаниеТоваровТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	СписаниеТоваров.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И СписаниеТоваровТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И СписаниеТоваров.Проведен = ИСТИНА
	            // |	И СписаниеТоваров.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	СписаниеТоваров.Склад,
	             |	СписаниеТоваров.Номер,
	             |	СписаниеТоваров.Дата,
	             |	СписаниеТоваровТовары.Номенклатура,
	             |	СписаниеТоваровТовары.Цена,
	             //|	СписаниеТоваров.Организация,
	             |	СписаниеТоваров.Склад.Код,
	             |	СписаниеТоваровТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.Склад);	//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент="Списание";
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=3;//Списание
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.Склад.Код);
		стр.Цена=Выборк.Цена;
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.КодДок=Выборк.Номер;		
		стр.Адрес="Списание";
		//++МС
		стр.Штрихкод=Выборк.Штрихкод;
		//--МС
	Конеццикла;
	
	//-----------------------------------------------------------------------------------------
	// Комплектация - выгружать как списание
	Состояние("Обработка комплектаций товара...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	КомплектацияНоменклатуры.Склад,
	             |	КомплектацияНоменклатуры.Номер,
	             |	КомплектацияНоменклатуры.Дата,
	             |	КомплектацияНоменклатурыКомплектующие.Номенклатура,
	             //|	СписаниеТоваровТовары.Цена,
	             //|	СписаниеТоваров.Организация,
	             |	СУММА(КомплектацияНоменклатурыКомплектующие.Количество) КАК Количество,
	             |	КомплектацияНоменклатурыКомплектующие.Номенклатура КАК Номенклатура1,
	             |	КомплектацияНоменклатуры.Склад.Код,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	             |ИЗ
	             |	Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
	             |		ПО КомплектацияНоменклатурыКомплектующие.Ссылка = КомплектацияНоменклатуры.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО КомплектацияНоменклатурыКомплектующие.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	КомплектацияНоменклатуры.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И КомплектацияНоменклатурыКомплектующие.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И КомплектацияНоменклатуры.Проведен = ИСТИНА
	            // |	И СписаниеТоваров.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	КомплектацияНоменклатуры.Склад,
	             |	КомплектацияНоменклатуры.Номер,
	             |	КомплектацияНоменклатуры.Дата,
	             |	КомплектацияНоменклатурыКомплектующие.Номенклатура,
	             //|	КомплектацияНоменклатурыКомплектующие.Цена,
	             //|	СписаниеТоваров.Организация,
	             |	КомплектацияНоменклатуры.Склад.Код,
	             |	КомплектацияНоменклатурыКомплектующие.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.Склад);	//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент="Списание";
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=3;//Списание
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.Склад.Код);
		стр.Цена=0;
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.КодДок=Выборк.Номер;		
		стр.Адрес="Списание";
		//++МС
		стр.Штрихкод=Выборк.Штрихкод;
		//--МС
	Конеццикла;
/////////////////////				 
	
	
	//Перемещение
	Состояние("Обработка перемещения товара...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПеремещениеТоваров.СкладОтправитель,
	             |	ПеремещениеТоваров.СкладПолучатель,
	             |	ПеремещениеТоваров.Номер,
	             |	ПеремещениеТоваров.Дата,
	             |	ПеремещениеТоваровТовары.Номенклатура,
	             |	ПеремещениеТоваровТовары.Цена,
	             |	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	             |	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура1,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	             |ИЗ
	             |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	             |		ПО ПеремещениеТоваровТовары.Ссылка = ПеремещениеТоваров.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО ПеремещениеТоваровТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	ПеремещениеТоваров.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ПеремещениеТоваровТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И ПеремещениеТоваров.Проведен = ИСТИНА
	            // |	И ПеремещениеТоваров.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПеремещениеТоваров.СкладОтправитель,
	             |	ПеремещениеТоваров.СкладПолучатель,
	             |	ПеремещениеТоваров.Номер,
	             |	ПеремещениеТоваров.Дата,
	             |	ПеремещениеТоваровТовары.Номенклатура,
	             |	ПеремещениеТоваровТовары.Цена,
	             |	ПеремещениеТоваровТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	
	////++МС
	//мСкладыПеремещения = Новый Массив;
	//мСкладыПеремещения.Добавить(Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение); // Основной
	//тзСклады = Результат.Выгрузить();
	//тзСклады.Свернуть("СкладОтправитель,СкладПолучатель");
	//Для Каждого стр Из тзСклады.ВыгрузитьКолонку("СкладОтправитель") Цикл
	//	лУжеЕсть = Ложь;
	//	Для Каждого эл Из мСкладыПеремещения Цикл
	//		Если стр = эл Тогда лУжеЕсть = Истина; Прервать; КонецЕсли; 
	//	КонецЦикла;
	//	Если НЕ лУжеЕсть Тогда	
	//		мСкладыПеремещения.Добавить(стр);			
	//	КонецЕсли;
	//КонецЦикла;
	//
	//Для Каждого стр Из тзСклады.ВыгрузитьКолонку("СкладПолучатель") Цикл
	//	лУжеЕсть = Ложь;
	//	Для Каждого эл Из мСкладыПеремещения Цикл
	//		Если стр = эл Тогда лУжеЕсть = Истина; Прервать; КонецЕсли; 
	//	КонецЦикла;
	//	Если НЕ лУжеЕсть Тогда	
	//		мСкладыПеремещения.Добавить(стр);			
	//	КонецЕсли;
	//КонецЦикла;
	////--МС
	
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		ПроверитьДобавитьСклад(Выборк.СкладОтправитель);	//++МС Заполним склады
		ПроверитьДобавитьСклад(Выборк.СкладПолучатель);		//++МС Заполним склады
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент="Перемещение";
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=5;//Отправка 
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.СкладПолучатель.Код);
		стр.СкладБ=Строка(Выборк.СкладОтправитель.Код);
		стр.Цена=Выборк.Цена;
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.КодДок=Выборк.Номер;		
		стр.Адрес="Перемещение";
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент="Перемещение";
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=6;//Принятие
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=строка(Выборк.СкладОтправитель.Код);
		стр.СкладБ=строка(Выборк.СкладПолучатель.Код);
		стр.Цена=Выборк.Цена;
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.КодДок=Выборк.Номер;		
		стр.Адрес="Перемещение";
		//++МС
		стр.Штрихкод=Выборк.Штрихкод;
		//--МС
	Конеццикла;
	
	//--------------------------------------
	//-----------------------------------------------------------------------------------------
	//Оприходование
	Состояние("Обработка Оприходования товара...");
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ОприходованиеТоваров.Склад,
	             |	ОприходованиеТоваров.Номер,
	             |	ОприходованиеТоваров.Дата,
	             |	ОприходованиеТоваровТовары.Номенклатура,
	             |	ОприходованиеТоваровТовары.Цена,
	             //|	ОприходованиеТоваров.Организация,
	             |	СУММА(ОприходованиеТоваровТовары.Количество) КАК Количество,
	             |	ОприходованиеТоваровТовары.Номенклатура КАК Номенклатура1,
	             |	ОприходованиеТоваров.Склад.Код,
	             |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	             |ИЗ
	             |	Документ.ОприходованиеТоваров.Товары КАК ОприходованиеТоваровТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	             |		ПО ОприходованиеТоваровТовары.Ссылка = ОприходованиеТоваров.Ссылка
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО ОприходованиеТоваровТовары.Номенклатура = Штрихкоды.Владелец
	             |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	             |ГДЕ
	             |	ОприходованиеТоваров.Дата МЕЖДУ &НачПериода И &КонПериода
	             |	И ОприходованиеТоваровТовары.Номенклатура В ИЕРАРХИИ(&СписокПапокНоменклатуры)
	             |	И ОприходованиеТоваров.Проведен = ИСТИНА
	            // |	И ОприходованиеТоваров.Организация = &Организация
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ОприходованиеТоваров.Склад,
	             |	ОприходованиеТоваров.Номер,
	             |	ОприходованиеТоваров.Дата,
	             |	ОприходованиеТоваровТовары.Номенклатура,
	             |	ОприходованиеТоваровТовары.Цена,
	            // |	ОприходованиеТоваров.Организация,
	             |	ОприходованиеТоваров.Склад.Код,
	             |	ОприходованиеТоваровТовары.Номенклатура";					 
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//Запрос.УстановитьПараметр("Организация",Организация);
	//--МС 
	Результат=Запрос.Выполнить();
	//сообщить(Строка(Результат)+" ну и?");
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		//++МС Заполним склады
		ПроверитьДобавитьСклад(Выборк.Склад);	
		//--МС
		стр=Вывод.Добавить();
		стр.ДатаДокумента=Выборк.Дата;
		стр.Контрагент="Оприходование";
		стр.НомерДокумента=Выборк.Номер;
		стр.КодОперации=7;//
		стр.Номенклатура=Выборк.Номенклатура;
		стр.Количество=Выборк.Количество;
		стр.Склад=Строка(Выборк.Склад.Код);
		стр.Цена=Выборк.Цена;
		//++МС
		стр.ЦенаПоступления=НайтиЦенуПоставки(Выборк.Номенклатура);
		стр.Штрихкод=Выборк.Штрихкод;
		//--МС
		стр.КодДок=Выборк.Номер;		
		стр.Адрес="Оприходование";
	Конеццикла;
	
	
	//--------------------------------------
	ФайлОтч = Excel.Workbooks.Open(ИмяФайла);
	Excel.ScreenUpdating = 0; //Отключение автообновления экрана ускоряет выгрузку в Excel
	Excel.Calculation = -4135; //Отключение автоматического пересчета ячеек ускоряет выгрузку в Excel
	Лист = ФайлОтч.Sheets(1); 
	Лист.Rows(1).Font.Bold=1;//Заполняем шапку
	Лист.Cells(1,1).FormulaR1C1="ИНН";  
	Лист.Cells(1,2).FormulaR1C1="Дистрибьютор";  
	Лист.Cells(1,3).FormulaR1C1="Дата начала";  
	Лист.Cells(1,4).FormulaR1C1="Дата окончания";
	Лист.Cells(1,5).FormulaR1C1="Номер склада"; 
	Лист.Cells(1,6).FormulaR1C1="Название склада";  
	Лист.Cells(1,7).FormulaR1C1="Почта";
	// ++МС
	//Выборка = Справочники.Склады.Выбрать();
	//лОсновнойСклад = Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение;
	i=2;
	Состояние("Обработка формирования отчета...");
	Для Каждого эл Из мСкладыДвижений Цикл
		Лист.Cells(i,1).FormulaR1C1=Справочники.Организации.НайтиПоКоду(КодФирмы).ИНН; 
		Лист.Cells(i,2).FormulaR1C1=Справочники.Организации.НайтиПоКоду(КодФирмы).НаименованиеПолное; 
		Лист.Cells(i,3).FormulaR1C1=ВыбНачПериода; 
		Лист.Cells(i,4).FormulaR1C1=ВыбКонПериода; 
		Лист.Cells(i,5).FormulaR1C1="["+Строка(эл.Код)+"]"; 
		Лист.Cells(i,6).FormulaR1C1=эл.Наименование;
		Лист.Cells(i,7).FormulaR1C1="s.muravjiev@megatrade.ural.ru";// адрес электронной почты отправителя отчета!!!!
		i=i+1;	
	КонецЦикла;
	// --МС
	//i=2;
	//Состояние("Обработка формирования отчета...");
	////Пока выборка.Следующий() = 1 Цикл
	//	Лист.Cells(i,1).FormulaR1C1=Справочники.Организации.НайтиПоКоду(КодФирмы).ИНН; 
	//	Лист.Cells(i,2).FormulaR1C1=Справочники.Организации.НайтиПоКоду(КодФирмы).НаименованиеПолное; 
	//	Лист.Cells(i,3).FormulaR1C1=ВыбНачПериода; 
	//	Лист.Cells(i,4).FormulaR1C1=ВыбКонПериода; 
	//	Лист.Cells(i,5).FormulaR1C1="["+Строка(лОсновнойСклад.Код)+"]"; 
	//	Лист.Cells(i,6).FormulaR1C1=лОсновнойСклад.Наименование;
	//	Лист.Cells(i,7).FormulaR1C1="s.muravjiev@megatrade.ural.ru";// адрес электронной почты отправителя отчета!!!!
	//	//Вставить ОБЯЗАТЕЛЬНО
	//	i=i+1;	
	////КонецЦикла;
	Лист.Columns("A:G").AutoFit();
	Лист=ФайлОтч.Sheets(2);
	
	м1 = Новый Массив;
	м1.Добавить("№ п/п");
	м1.Добавить("ИД операции");
	м1.Добавить("Дата операции");
	м1.Добавить("Дата документа");
	м1.Добавить("Тип перемещения");
	м1.Добавить("Код торгового представителя");
	м1.Добавить("Торговый представитель");
	м1.Добавить("Наименование клиента");
	м1.Добавить("Код клиента");
	м1.Добавить("Код адреса");
	м1.Добавить("ИНН клиента");
	м1.Добавить("Номер склада");
	м1.Добавить("Адрес клиента");
	м1.Добавить("№ документа 1");
	м1.Добавить("№ документа 2");
	м1.Добавить("№ документа 3");
	м1.Добавить("Код ТП");
	м1.Добавить("Штрихкод ТП");
	м1.Добавить("Наименование ТП");
	м1.Добавить("Кол-во, в ед. товара");
	м1.Добавить("Цена реализации");
	м1.Добавить("Цена поставки");
	м1.Добавить("Валюта операции");
	м1.Добавить("Код супервайзера");
	м1.Добавить("Супервайзер");
	м1.Добавить("Дата выпуска");
	м1.Добавить("Идентификатор раздела Б");
	
	Лист.Rows(1).Font.Bold=1;//Заполняем шапку
	//Лист.Cells(1,1).FormulaR1C1="№ п/п";  
	//Лист.Cells(1,2).FormulaR1C1="ИД операции";  
	//Лист.Cells(1,3).FormulaR1C1="Дата операции";  
	//Лист.Cells(1,4).FormulaR1C1="Дата документа";
	//Лист.Cells(1,5).FormulaR1C1="Тип перемещения"; 
	//Лист.Cells(1,6).FormulaR1C1="Код торгового представителя";  
	//Лист.Cells(1,7).FormulaR1C1="Торговый представитель";  
	//Лист.Cells(1,8).FormulaR1C1="Наименование клиента";  
	//Лист.Cells(1,9).FormulaR1C1="Код клиента";  
	//Лист.Cells(1,10).FormulaR1C1="Код адреса";  	// НОВ
	//Лист.Cells(1,11).FormulaR1C1="ИНН клиента";  
	//Лист.Cells(1,12).FormulaR1C1="Номер склада";                               
	//Лист.Cells(1,13).FormulaR1C1="Адрес клиента";   
	//Лист.Cells(1,14).FormulaR1C1="№ документа 1";
	//Лист.Cells(1,15).FormulaR1C1="№ документа 2";  
	//Лист.Cells(1,16).FormulaR1C1="№ документа 3";  
	//Лист.Cells(1,17).FormulaR1C1="Код ТП";
	//Лист.Cells(1,18).FormulaR1C1="Штрихкод ТП";		// НОВ
	//Лист.Cells(1,19).FormulaR1C1="Наименование ТП";   
	//Лист.Cells(1,20).FormulaR1C1="Кол-во, в ед. товара";
	//Лист.Cells(1,21).FormulaR1C1="Цена реализации";
	//Лист.Cells(1,22).FormulaR1C1="Цена поставки";	// НОВ
	//Лист.Cells(1,23).FormulaR1C1="Валюта операции";
	//Лист.Cells(1,24).FormulaR1C1="Код супервайзера";   
	//Лист.Cells(1,25).FormulaR1C1="Супервайзер";
	//Лист.Cells(1,26).FormulaR1C1="Дата выпуска";
	//Лист.Cells(1,27).FormulaR1C1="Идентификатор раздела Б"; // НОВ
	ЗаполнитьЗаголовкиКолонок(Лист,1,м1);
	//А вот теперь все содерживое Вывод грузим на лист
	i=2;
	кол=Вывод.Количество();
	Для Каждого ТекущаяСтрока Из Вывод Цикл
		состояние(Строка(i)+" из "+Строка(кол));
		Лист.Cells(i,ИндексКолонки(м1,"№ п/п")).FormulaR1C1=i-1;
		Лист.Cells(i,ИндексКолонки(м1,"ИД операции")).FormulaR1C1=ТекущаяСтрока.КодДок;
		Лист.Cells(i,ИндексКолонки(м1,"Дата операции")).FormulaR1C1=ТекущаяСтрока.ДатаДокумента;
		Лист.Cells(i,ИндексКолонки(м1,"Дата документа")).FormulaR1C1=ТекущаяСтрока.ДатаДокумента;
		Лист.Cells(i,ИндексКолонки(м1,"Тип перемещения")).FormulaR1C1=ТекущаяСтрока.КодОперации;
		если ТекущаяСтрока.КодОперации=3 Тогда
			Лист.Cells(i,ИндексКолонки(м1,"Наименование клиента")).FormulaR1C1="Списание";
			Лист.Cells(i,ИндексКолонки(м1,"Код клиента")).FormulaR1C1="[Списание]";
			Лист.Cells(i,ИндексКолонки(м1,"ИНН клиента")).FormulaR1C1="Списание";
			Лист.Cells(i,ИндексКолонки(м1,"Адрес клиента")).FormulaR1C1="Списание";
		Иначе
			Если ТекущаяСтрока.КодОперации=5 Тогда
				Лист.Cells(i,ИндексКолонки(м1,"Наименование клиента")).FormulaR1C1="На склад "+ТекущаяСтрока.СкладБ;
				Лист.Cells(i,ИндексКолонки(м1,"Код клиента")).FormulaR1C1="[Отправление Товара]";
				Лист.Cells(i,ИндексКолонки(м1,"ИНН клиента")).FormulaR1C1="Отправление Товара";
				Лист.Cells(i,ИндексКолонки(м1,"Адрес клиента")).FormulaR1C1="Отправление Товара";
			Иначе
				Если ТекущаяСтрока.КодОперации=6 Тогда
					Лист.Cells(i,ИндексКолонки(м1,"Наименование клиента")).FormulaR1C1="Со склада "+ТекущаяСтрока.СкладБ;
					Лист.Cells(i,ИндексКолонки(м1,"Код клиента")).FormulaR1C1="[Прибытие Товара]";
					Лист.Cells(i,ИндексКолонки(м1,"ИНН клиента")).FormulaR1C1="Прибытие Товара";
					Лист.Cells(i,ИндексКолонки(м1,"Адрес клиента")).FormulaR1C1="Прибытие Товара";
				Иначе
					если ТекущаяСтрока.КодОперации=7 Тогда
						Лист.Cells(i,ИндексКолонки(м1,"Наименование клиента")).FormulaR1C1="Оприходование";
						Лист.Cells(i,ИндексКолонки(м1,"Код клиента")).FormulaR1C1="[Оприходование]";
						Лист.Cells(i,ИндексКолонки(м1,"ИНН клиента")).FormulaR1C1="Оприходование";
						Лист.Cells(i,ИндексКолонки(м1,"Адрес клиента")).FormulaR1C1="Оприходование";
					Иначе
						Лист.Cells(i,ИндексКолонки(м1,"Наименование клиента")).FormulaR1C1=ТекущаяСтрока.Контрагент.НаименованиеПолное;//или что-то другое в другом случае
						Лист.Cells(i,ИндексКолонки(м1,"Код клиента")).FormulaR1C1="["+Строка(ТекущаяСтрока.Контрагент.Код)+"]";//так надо
						Лист.Cells(i,ИндексКолонки(м1,"ИНН клиента")).FormulaR1C1=ТекущаяСтрока.Контрагент.ИНН;
						Лист.Cells(i,ИндексКолонки(м1,"Адрес клиента")).FormulaR1C1=ТекущаяСтрока.Адрес;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Лист.Cells(i,ИндексКолонки(м1,"Номер склада")).FormulaR1C1="["+Строка(ТекущаяСтрока.Склад)+"]";
		Лист.Cells(i,ИндексКолонки(м1,"№ документа 1")).FormulaR1C1=ТекущаяСтрока.НомерДокумента;
		//++МС
		Лист.Cells(i,ИндексКолонки(м1,"№ документа 2")).FormulaR1C1=ТекущаяСтрока.НомерВходящегоДокумента;
		Лист.Cells(i,ИндексКолонки(м1,"№ документа 3")).FormulaR1C1=ТекущаяСтрока.КППКонтрагента;
		Лист.Cells(i,ИндексКолонки(м1,"Штрихкод ТП")).FormulaR1C1=Строка(ТекущаяСтрока.Штрихкод);
		Лист.Cells(i,ИндексКолонки(м1,"Цена поставки")).FormulaR1C1=ТекущаяСтрока.ЦенаПоступления;
		Лист.Cells(i,ИндексКолонки(м1,"Торговый представитель")).FormulaR1C1=ТекущаяСтрока.ТП;
		//Лист.Cells(i,ИндексКолонки(м1,"Код торгового представителя")).FormulaR1C1="["+Строка(ТекущаяСтрока.КодТП)+"]";
		//--МС
		Лист.Cells(i,ИндексКолонки(м1,"Код ТП")).FormulaR1C1="["+Строка(ТекущаяСтрока.Номенклатура.Код)+"]";
		Лист.Cells(i,ИндексКолонки(м1,"Наименование ТП")).FormulaR1C1=ТекущаяСтрока.Номенклатура.НаименованиеПолное;
		Лист.Cells(i,ИндексКолонки(м1,"Кол-во, в ед. товара")).FormulaR1C1=ТекущаяСтрока.Количество;
		Лист.Cells(i,ИндексКолонки(м1,"Цена реализации")).FormulaR1C1=ТекущаяСтрока.Цена;
		
		//Необходимо указать международный код валюты операции, код супервайзера, ФИО супервайзера, дату выпуска продукции
		Лист.Cells(i,ИндексКолонки(м1,"Валюта операции")).FormulaR1C1="RUR";
		Лист.Cells(i,ИндексКолонки(м1,"Код супервайзера")).FormulaR1C1="";
		Лист.Cells(i,ИндексКолонки(м1,"Супервайзер")).FormulaR1C1="";
		Лист.Cells(i,ИндексКолонки(м1,"Дата выпуска")).FormulaR1C1="";
		i=i+1;
	КонецЦикла;
	//Заполнение третьего листа
	Лист=ФайлОтч.Sheets(3);
	
	//Заполняем шапку
	
	//Лист.Cells(1,1).FormulaR1C1="Код ТП";
	//Лист.Cells(1,2).FormulaR1C1="Наименование ТП";   
	//Лист.Cells(1,3).FormulaR1C1="Остаток на начало, в ед. товара";
	//Лист.Cells(1,4).FormulaR1C1="Остаток на конец, в ед. товара";
	//Лист.Cells(1,5).FormulaR1C1="Номер склада";
	//Лист.Cells(1,6).FormulaR1C1="Дата выпуска";

	м2 = Новый Массив;
	м2.Добавить("Код ТП");
	м2.Добавить("Штрихкод ТП");
	м2.Добавить("Наименование ТП");   
	м2.Добавить("Остаток на начало, в ед. товара");
	м2.Добавить("Остаток на конец, в ед. товара");
	м2.Добавить("Остаток на начало, в ценах поставки");
	м2.Добавить("Остаток на конец, в ценах поставки");
	м2.Добавить("Номер склада");
	м2.Добавить("Дата выпуска");
	м2.Добавить("Идентификатор раздела Б");
	Лист.Rows(1).Font.Bold=1;
	ЗаполнитьЗаголовкиКолонок(Лист,1,м2);
	
	//Заполняем тело
	k=2;
	
	//Состояние("Заполнение остатков по складам"+Строка(Выбо.Наименование));
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстаткиИОбороты.Склад,
	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
	|	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	|	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	|ИЗ
	//++МС
	//|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачПериода, &КонПериода, , ДвиженияИГраницыПериода, Номенклатура.ОсновнойПоставщик=&ОсновнойПоставщик) КАК ТоварыНаСкладахОстаткиИОбороты
	|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачПериода, &КонПериода, , ДвиженияИГраницыПериода, Склад В (&Склады) И Номенклатура В ИЕРАРХИИ (&СписокПапокНоменклатуры)) КАК ТоварыНаСкладахОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТоварыНаСкладахОстаткиИОбороты.Номенклатура = Штрихкоды.Владелец
	|		И (Штрихкоды.ТипШтрихкода = &ТипШтрихкода)
	//--МС
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
	|	ТоварыНаСкладахОстаткиИОбороты.Склад";	
	//"ВЫБРАТЬ
	//			  	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	//			  	|	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	//			  	|	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	//			  	|	ТоварыНаСкладахОстаткиИОбороты.Склад КАК Склад
	//			  	|ИЗ
	//			  	|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
	//			  	|			&НачДата,
	//			  	|			&КонДата,
	//			  	|			,
	//			  	|			,
	//			  	|			Номенклатура.Ссылка В ИЕРАРХИИ (&Ссылка)
	//			  	|				И Склад.Код = &Код) КАК ТоварыНаСкладахОстаткиИОбороты
	//			  	|
	//			  	|СГРУППИРОВАТЬ ПО
	//			  	|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
	//			  	|	ТоварыНаСкладахОстаткиИОбороты.Склад
	//			  	|
	//			  	|УПОРЯДОЧИТЬ ПО
	//			  	|	Номенклатура
	//			  	|ИТОГИ ПО
	//			  	|	Склад
	//			  	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(НачДата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(КонДата));
	//Запрос.УстановитьПараметр("Склад", Справочники.дм_КонстантыМегатрейд.ОсновнойСклад.Значение);
	Запрос.УстановитьПараметр("Склады", мСкладыДвижений);
	
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	//++МС
	//Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	СписокПапокНоменклатуры = Новый Массив;
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	//--МС 
	//Запрос.УстановитьПараметр("Код",Выбо.Код);
	Результат=Запрос.Выполнить();
	Выборк=Результат.Выбрать();
	Пока Выборк.Следующий() Цикл
		//Лист.Cells(k,1).FormulaR1C1="["+Строка(Выборк.Номенклатура.Код)+"]";  
		//Лист.Cells(k,2).FormulaR1C1=Выборк.Номенклатура.Наименование;  
		//Лист.Cells(k,3).FormulaR1C1=Выборк.КоличествоНачальныйОстаток;  
		//Лист.Cells(k,4).FormulaR1C1=Выборк.КоличествоКонечныйОстаток; 
		//Лист.Cells(k,5).FormulaR1C1="["+Строка(Выборк.Склад.Код)+"]";
		////Необходимо указать дату выпуска продукции, если такая информация есть в базе
		//Лист.Cells(k,6).FormulaR1C1="";
		
		Лист.Cells(k,ИндексКолонки(м2,"Код ТП")).FormulaR1C1="["+Строка(Выборк.Номенклатура.Код)+"]";
		Лист.Cells(k,ИндексКолонки(м2,"Штрихкод ТП")).FormulaR1C1=Выборк.Штрихкод;
		Лист.Cells(k,ИндексКолонки(м2,"Наименование ТП")).FormulaR1C1=Выборк.Номенклатура.Наименование;  
		
		//лКоличествоНачальныйОстаток = 0;
		//лКоличествоКонечныйОстаток = 0;
		//Если Выборк.КоличествоНачальныйОстаток < 0 Тогда
		//	лКоличествоНачальныйОстаток = 0;
		//	лКоличествоКонечныйОстаток = Выборк.КоличествоКонечныйОстаток + -Выборк.КоличествоНачальныйОстаток;
		//	Если лКоличествоКонечныйОстаток < 0 Тогда
		//		лКоличествоКонечныйОстаток = 0;
		//	КонецЕсли;
		//ИначеЕсли Выборк.КоличествоКонечныйОстаток < 0 Тогда
		//	лКоличествоНачальныйОстаток = Выборк.КоличествоНачальныйОстаток + -Выборк.КоличествоКонечныйОстаток;
		//	лКоличествоКонечныйОстаток = 0;
		//Иначе
			лКоличествоНачальныйОстаток = Выборк.КоличествоНачальныйОстаток;
			лКоличествоКонечныйОстаток = Выборк.КоличествоКонечныйОстаток;
		//КонецЕсли;
		
		Лист.Cells(k,ИндексКолонки(м2,"Остаток на начало, в ед. товара")).FormulaR1C1=лКоличествоНачальныйОстаток;  
		Лист.Cells(k,ИндексКолонки(м2,"Остаток на конец, в ед. товара")).FormulaR1C1=лКоличествоКонечныйОстаток;  
		Лист.Cells(k,ИндексКолонки(м2,"Остаток на начало, в ценах поставки")).FormulaR1C1=лКоличествоНачальныйОстаток*НайтиЦенуПоставки(Выборк.Номенклатура);
		Лист.Cells(k,ИндексКолонки(м2,"Остаток на конец, в ценах поставки")).FormulaR1C1=лКоличествоКонечныйОстаток*НайтиЦенуПоставки(Выборк.Номенклатура);
		Лист.Cells(k,ИндексКолонки(м2,"Номер склада")).FormulaR1C1="["+Строка(Выборк.Склад.Код)+"]";
		Лист.Cells(k,ИндексКолонки(м2,"Дата выпуска")).FormulaR1C1="";
		Лист.Cells(k,ИндексКолонки(м2,"Идентификатор раздела Б")).FormulaR1C1="";
		
		////Состояние("Идет обработка данных склада "+Строка(Выбо.Наименование));
		k=k+1;                 
	КонецЦикла;
	
	//------------------------------------------------------------------------
	
	////Обработка розничных складов
	//
	////Состояние("Заполнение остатков по складам"+Строка(Выбо.Наименование));
	//Запрос = Новый Запрос;
	//Запрос.Текст =	"ВЫБРАТЬ
	//|	ТоварыВРозницеОстаткиИОбороты.Склад,
	//|	ТоварыВРозницеОстаткиИОбороты.Номенклатура,
	//|	СУММА(ТоварыВРозницеОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	//|	СУММА(ТоварыВРозницеОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
	//|ИЗ
	////++МС
	////|	РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(&НачПериода, &КонПериода, ,ДвиженияИГраницыПериода ,Номенклатура.ОсновнойПоставщик=&ОсновнойПоставщик) КАК ТоварыВРозницеОстаткиИОбороты
	//|	РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(&НачПериода, &КонПериода, , ДвиженияИГраницыПериода, Номенклатура В ИЕРАРХИИ (&СписокПапокНоменклатуры)) КАК ТоварыВРозницеОстаткиИОбороты
	////--МС
	//|СГРУППИРОВАТЬ ПО
	//|	ТоварыВРозницеОстаткиИОбороты.Номенклатура,
	//|	ТоварыВРозницеОстаткиИОбороты.Склад";	
	//Запрос.УстановитьПараметр("НачПериода",НачДата);
	//Запрос.УстановитьПараметр("КонПериода",КонДата);
	////++МС
	////Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	//СписокПапокНоменклатуры = Новый Массив;
	//СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	//СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	//Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	////--МС 
	////Запрос.УстановитьПараметр("Код",Выбо.Код);
	//Результат=Запрос.Выполнить();
	//Выборк=Результат.Выбрать();
	//Пока Выборк.Следующий() Цикл
	//	Лист.Cells(k,1).FormulaR1C1="["+Строка(Выборк.Номенклатура.Код)+"]";  
	//	Лист.Cells(k,2).FormulaR1C1=Выборк.Номенклатура.Наименование;  
	//	Лист.Cells(k,3).FormulaR1C1=Выборк.КоличествоНачальныйОстаток;  
	//	Лист.Cells(k,4).FormulaR1C1=Выборк.КоличествоКонечныйОстаток; 
	//	Лист.Cells(k,5).FormulaR1C1="["+Строка(Выборк.Склад.Код)+"]";
	//	//Состояние("Идет обработка данных склада "+Строка(Выбо.Наименование));
	//	k=k+1;                 
	//КонецЦикла;
	//
	////---------------------------------------------------------------
	//
	////Состояние("Заполнение остатков по складам"+Строка(Выбо.Наименование));
	//Запрос = Новый Запрос;
	//Запрос.Текст =	"ВЫБРАТЬ
	//|	ТоварыВНТТОстаткиИОбороты.Склад,
	//|	ТоварыВНТТОстаткиИОбороты.Номенклатура,
	//|	СУММА(ТоварыВНТТОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	//|	СУММА(ТоварыВНТТОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
	//|ИЗ
	////++МС
	////|	РегистрНакопления.ТоварыВНТТ.ОстаткиИОбороты(&НачПериода, &КонПериода, ,ДвиженияИГраницыПериода ,Номенклатура.ОсновнойПоставщик=&ОсновнойПоставщик) КАК ТоварыВНТТОстаткиИОбороты
	//|	РегистрНакопления.ТоварыВНТТ.ОстаткиИОбороты(&НачПериода, &КонПериода, , ДвиженияИГраницыПериода, Номенклатура В ИЕРАРХИИ (&СписокПапокНоменклатуры)) КАК ТоварыВНТТОстаткиИОбороты
	////--МС
	//|СГРУППИРОВАТЬ ПО
	//|	ТоварыВНТТОстаткиИОбороты.Номенклатура,
	//|	ТоварыВНТТОстаткиИОбороты.Склад";	
	//Запрос.УстановитьПараметр("НачПериода",НачДата);
	//Запрос.УстановитьПараметр("КонПериода",КонДата);
	////++МС
	////Запрос.УстановитьПараметр("ОсновнойПоставщик",СсылкаНаОбъект1);
	//СписокПапокНоменклатуры = Новый Массив;
	//СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000063")); // Эфко Масло
	//СписокПапокНоменклатуры.Добавить(Справочники.Номенклатура.НайтиПоКоду("00000000009")); // Эфко Майонез
	//Запрос.УстановитьПараметр("СписокПапокНоменклатуры", СписокПапокНоменклатуры);
	////--МС 
	////Запрос.УстановитьПараметр("Код",Выбо.Код);
	//Результат=Запрос.Выполнить();
	//Выборк=Результат.Выбрать();
	//Пока Выборк.Следующий() Цикл
	//	Лист.Cells(k,1).FormulaR1C1="["+Строка(Выборк.Номенклатура.Код)+"]";  
	//	Лист.Cells(k,2).FormulaR1C1=Выборк.Номенклатура.Наименование;  
	//	Лист.Cells(k,3).FormulaR1C1=Выборк.КоличествоНачальныйОстаток;  
	//	Лист.Cells(k,4).FormulaR1C1=Выборк.КоличествоКонечныйОстаток; 
	//	Лист.Cells(k,5).FormulaR1C1="["+Строка(Выборк.Склад.Код)+"]";
	//	//Состояние("Идет обработка данных склада "+Строка(Выбо.Наименование));
	//	k=k+1;                 
	//КонецЦикла;
	
	
	//----------------------------------------------------------
	Excel.ScreenUpdating = 1;
	Excel.ActiveWorkbook.Save(); //Сохраняемся
	Excel.ActiveWorkbook.Close(); //Выходим
	Сообщить("Выгрузка отчета НЕОН завершена");
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьАдрес(Контрагент, ТипАдреса)
	// "ФактиАдресКонтрагента",  "ЮрАдресКонтрагента"
	
	ВидАдреса = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию(ТипАдреса).Ссылка;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Объект", Контрагент);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид"   , ВидАдреса);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Результат = "";
	Иначе
		Результат = РезультатЗапроса.Выгрузить()[0].Представление;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура КаталогЭкспортаНачалоВыбора(Элемент, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	Диалог.Каталог = ЭлементыФормы[Элемент.Имя].Значение;
	
	Результат = Диалог.Выбрать();
	
	Если Результат Тогда
		ЭлементыФормы[Элемент.Имя].Значение = Диалог.Каталог;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДобавитьСклад(пСклад)
	УжеЕсть = Ложь;
	Для Каждого эл Из мСкладыДвижений Цикл
		Если эл = пСклад Тогда УжеЕсть = Истина; Прервать; КонецЕсли;
	КонецЦикла;
	Если НЕ УжеЕсть Тогда
		мСкладыДвижений.Добавить(пСклад);
	КонецЕсли;
КонецПроцедуры

Функция НайтиЦенуПоставки(пНоменклатура)
	лСтрокаЦены = мЦеныПоставки.Найти(пНоменклатура,"Номенклатура");
	Возврат ?(лСтрокаЦены <> Неопределено, лСтрокаЦены.ЦенаПоступления, 0);
КонецФункции

НачДата=ТекущаяДата()-10*24*60*60;
КонДата=ТекущаяДата();

